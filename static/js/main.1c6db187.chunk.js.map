{"version":3,"sources":["components/convoy-logo.svg","jake-truck-loader-1.gif","jake-truck-loader-2.gif","components/TruckLoader.js","components/FloatingHearts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Wheel","className","speed","classNames","style","animationDuration","Array","from","length","map","_","i","key","TruckLoader","scale","primaryColor","text","cargo","src","imgConvoyLogo","alt","transform","backgroundColor","FloatingHearts","memo","interval","useState","hearts","setHearts","useEffect","timerId","setInterval","document","hidden","invalidHeartIds","heartNodes","getElementsByClassName","forEach","id","offsetTop","push","getInvalidHeartIds","filteredHearts","filter","props","indexOf","offset","Math","floor","random","size","left","color","animDuration","largeHeartId","uuidv4","largeHeart","width","height","animation","smallHeartId","createHearts","clearInterval","App","sectionsColor","render","strings","typeSpeed","data-device","data-orientation","data-color","imgJakeTruckLoader1","imgJakeTruckLoader2","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1c6db187.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/convoy-logo.3ad85332.svg\";","module.exports = __webpack_public_path__ + \"static/media/jake-truck-loader-1.040463a6.gif\";","module.exports = __webpack_public_path__ + \"static/media/jake-truck-loader-2.d18815c0.gif\";","import React from 'react';\nimport classNames from 'classnames';\n\nimport imgConvoyLogo from './convoy-logo.svg';\n\nimport './TruckLoader.css';\n\nconst Wheel = ({ className, speed }) => (\n  <div\n    className={classNames(className, 'wheel')}\n    style={{\n      animationDuration: `${1 / speed}s`,\n    }}\n  >\n    <div className=\"spokes\">\n      {Array.from({ length: 4 }).map((_, i) => (\n        <div key={i} />\n      ))}\n    </div>\n  </div>\n);\n\nexport const TruckLoader = ({\n  speed = 1,\n  scale = 1,\n  primaryColor = '#f65335',\n  text = 'Endless Capacity & Zero Waste',\n  cargo = <img src={imgConvoyLogo} alt=\"Convoy Logo\" />,\n}) => {\n  return (\n    <div\n      className=\"truck-loader\"\n      style={{\n        transform: `scale(${scale})`,\n      }}\n    >\n      <div className=\"truck\">\n        <div className=\"head\">\n          <div className=\"engine\" />\n          <div\n            className=\"cab\"\n            style={{\n              backgroundColor: primaryColor,\n            }}\n          />\n          <div\n            className=\"cab-extender\"\n            style={{\n              backgroundColor: primaryColor,\n            }}\n          />\n          <div className=\"fuel-tank\" />\n          <Wheel className=\"front-wheel\" speed={speed} />\n        </div>\n        <div className=\"body\">\n          <div className=\"trailer\">\n            <div className=\"cargo-container\">{cargo}</div>\n            <div className=\"trailer-wheels\">\n              <div className=\"kingpin\" />\n              <div className=\"wheels\">\n                <Wheel speed={speed} />\n                <Wheel speed={speed} />\n              </div>\n            </div>\n          </div>\n          <div className=\"connector\">\n            <div className=\"kingpin\" />\n            <div className=\"wheels\">\n              <Wheel speed={speed} />\n              <Wheel speed={speed} />\n            </div>\n          </div>\n        </div>\n        <div className=\"wind\">\n          {Array.from({ length: 5 }).map((_, i) => (\n            <div\n              key={i}\n              style={{\n                animationDuration: `${1 / speed}s`,\n              }}\n            />\n          ))}\n        </div>\n      </div>\n      <div\n        className=\"text\"\n        style={{\n          animationDuration: `${2 / speed}s`,\n          backgroundColor: primaryColor,\n        }}\n      >\n        {text}\n      </div>\n    </div>\n  );\n};\n","import React, { memo, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport uuidv4 from 'uuid/v4';\n\nimport './FloatingHearts.css';\n\nconst createHearts = () => {\n  const offset = Math.floor(Math.random() * 40) + 1;\n  const size = Math.floor(Math.random() * 50) + 15;\n  const left = Math.floor(Math.random() * 100) + 1;\n  const color = Math.floor(Math.random() * 25) + 100;\n  const animDuration = Math.floor(Math.random() * 5) + 5;\n\n  const largeHeartId = uuidv4();\n  const largeHeart = (\n    <div\n      key={largeHeartId}\n      id={largeHeartId}\n      className=\"heart\"\n      style={{\n        width: size,\n        height: size,\n        left: `${left}%`,\n        backgroundColor: `rgba(255, ${color - 25}, ${color}, 1)`,\n        animation: `floating ${animDuration}s ease`,\n      }}\n    />\n  );\n\n  const smallHeartId = uuidv4();\n  const smallHeart = (\n    <div\n      key={smallHeartId}\n      id={smallHeartId}\n      className=\"heart\"\n      style={{\n        width: size - 10,\n        height: size - 10,\n        left: `${left + offset}%`,\n        backgroundColor: `rgba(255, ${color - 25}, ${color + 25}, 1)`,\n        animation: `floating ${animDuration + 5}s ease`,\n      }}\n    />\n  );\n\n  return [largeHeart, smallHeart];\n};\n\n/**\n * An invalid heart is one that floats out of bound\n */\nconst getInvalidHeartIds = () => {\n  const heartNodes = Array.from(document.getElementsByClassName('heart'));\n\n  const invalidHeartIds = [];\n  heartNodes.forEach(({ id, offsetTop }) => {\n    if (offsetTop <= -100) invalidHeartIds.push(id);\n  });\n\n  return invalidHeartIds;\n};\n\nexport const FloatingHearts = memo(({ interval = 1000, className }) => {\n  const [hearts, setHearts] = useState([]);\n\n  useEffect(() => {\n    let timerId = setInterval(() => {\n      if (document.hidden) return;\n\n      const invalidHeartIds = getInvalidHeartIds();\n      const filteredHearts = hearts.filter(\n        ({ props: { id } }) => invalidHeartIds.indexOf(id) === -1,\n      );\n      setHearts([...filteredHearts, ...createHearts()]);\n    }, interval);\n\n    return () => {\n      if (!timerId) return;\n      clearInterval(timerId);\n      timerId = null;\n    };\n  }, [hearts]);\n\n  return (\n    <div className={classNames('floating-hearts', className)}>{hearts}</div>\n  );\n});\n","import React from 'react';\nimport Typed from 'react-typed';\nimport ReactFullpage from '@fullpage/react-fullpage';\n\nimport { TruckLoader, FloatingHearts } from './components';\n\nimport imgJakeTruckLoader1 from './jake-truck-loader-1.gif';\nimport imgJakeTruckLoader2 from './jake-truck-loader-2.gif';\n\nimport 'html5-device-mockups/dist/device-mockups.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <main className=\"app\">\n      <ReactFullpage\n        sectionsColor={[\n          '#0b2127',\n          '#0b2127',\n          '#0b2127',\n          '#0b2127',\n          '#0b2127',\n          '#0b2127',\n          '#fff',\n          '#fff',\n          '#3176C6',\n        ]}\n        render={() => {\n          return (\n            <div id=\"fullpage-wrapper\">\n              <div className=\"section\">\n                <h1>\n                  <Typed\n                    strings={[\n                      'If waiting is inevitable, why not make the experience delightful?',\n                    ]}\n                    typeSpeed={40}\n                  />\n                </h1>\n              </div>\n\n              <div className=\"section\">\n                <h1>💡 Idea ① by Zico Deng 💡</h1>\n              </div>\n\n              <div className=\"section\">\n                <h1>🔥 Introduce Convoy Truck Loader 🔥</h1>\n                <TruckLoader />\n              </div>\n\n              <div className=\"section one-loader-fits-all\">\n                <h1>😍 One Loader Fits All 😍</h1>\n                <div\n                  className=\"device-wrapper\"\n                  style={{\n                    transform: 'scale(2)',\n                  }}\n                >\n                  <div\n                    className=\"device\"\n                    data-device=\"Macbook\"\n                    data-orientation=\"portrait\"\n                    data-color=\"black\"\n                  >\n                    <div className=\"screen\">\n                      <TruckLoader scale={0.1} />\n                    </div>\n                  </div>\n                </div>\n                <div\n                  className=\"device-wrapper\"\n                  style={{\n                    transform: 'scale(0.8)',\n                  }}\n                >\n                  <div\n                    className=\"device\"\n                    data-device=\"iPadPro\"\n                    data-orientation=\"portrait\"\n                    data-color=\"black\"\n                  >\n                    <div className=\"screen\">\n                      <TruckLoader scale={0.1} />\n                    </div>\n                  </div>\n                </div>\n                <div\n                  className=\"device-wrapper\"\n                  style={{\n                    transform: 'scale(0.4)',\n                  }}\n                >\n                  <div\n                    className=\"device\"\n                    data-device=\"iPhone7\"\n                    data-orientation=\"portrait\"\n                    data-color=\"black\"\n                  >\n                    <div className=\"screen\">\n                      <TruckLoader scale={0.1} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"section\">\n                <h1>🤩 One More Thing 🤩</h1>\n              </div>\n\n              <div className=\"section\">\n                <div className=\"flex\">\n                  <div>\n                    <h1>Ship With Convoy</h1>\n                    <h2>X10 Faster</h2>\n                    <h2>X10 💰💰💰</h2>\n                    <h2>X10 More Efficient</h2>\n                  </div>\n                  <TruckLoader\n                    speed={10}\n                    cargo={\n                      <div className=\"packages\">\n                        📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦\n                        📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦\n                        📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦\n                        📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦\n                        📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦\n                        📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦\n                        📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦\n                      </div>\n                    }\n                  />\n                </div>\n                <div className=\"flex\">\n                  <div>\n                    <h1>Ship With Others</h1>\n                    <h2>X10 Slower</h2>\n                    <h2>X10 More Frustrations</h2>\n                    <h2>X10 More Carbon Emissions</h2>\n                  </div>\n                  <TruckLoader\n                    speed={0.5}\n                    primaryColor=\"#3176C6\"\n                    text=\"Limited Capacity & Some Waste\"\n                    cargo={\n                      <div className=\"packages\">\n                        📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦\n                        📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦 📦\n                        📦 📦 📦 📦 📦 📦\n                      </div>\n                    }\n                  />\n                </div>\n              </div>\n\n              <div className=\"section\">\n                <h1 className=\"dark\">💡 Idea ② by Jake Rossilli 💡</h1>\n              </div>\n\n              <div className=\"section\">\n                <div className=\"flex images\">\n                  <img src={imgJakeTruckLoader1} />\n                  <img src={imgJakeTruckLoader2} />\n                </div>\n              </div>\n\n              <div className=\"section\">\n                <h1>💖 Like & Upvote Convoy Truck Loader 💖</h1>\n                <FloatingHearts />\n              </div>\n            </div>\n          );\n        }}\n      />\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}